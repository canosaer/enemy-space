class Game{constructor(){this.referenceDeck=new Deck,this.gameDeck=new Deck,this.player=new Player,this.opponent=new Opponent,this.missileDialog=document.querySelector(".missile-dialog"),this.missileNumbers=document.querySelectorAll(".missile-dialog__number-button"),this.missileTypes=document.querySelectorAll(".missile-dialog__missile-type"),this.specialActions=document.querySelectorAll(".special-actions__button"),this.componentDisplay=document.querySelector(".components_human"),this.oppComponentDisplay=document.querySelector(".components_opponent"),this.completeTurn=document.querySelector(".complete"),this.undoTurn=document.querySelector(".undo"),this.activeMissileIndex=-1,this.lightMissileIndex=0,this.heavyMissileIndex=0,this.turnActions=[],this.restoreComponents=[],this.defense=5,this.opponentAttacked=!1,this.playerAttacked=!1,this.setupListeners(),new MessageHandler,this.setupShip(),this.setupOpponent(),this.setupCrew()}setupListeners(){document.addEventListener("removeCrewListeners",this.toggleCrewListeners),document.addEventListener("advancePhase",this.advancePhase),document.addEventListener("togglePlayerComponents",this.togglePlayerComponentListeners),document.addEventListener("toggleOpponentComponents",this.toggleOpponentComponentListeners),this.missileNumbers.forEach((e=>{e.addEventListener("click",this.queueMissiles)})),this.missileTypes.forEach((e=>{e.addEventListener("click",this.selectMissileType)}))}returnToTitle=()=>{localStorage.setItem("dm21GameState","paused"),document.querySelector(".title-screen").classList.remove("hidden"),document.querySelector(".game-display").classList.add("hidden")};setupShip=()=>{this.level=2,this.player.components.installed=[this.referenceDeck.cards[5],this.referenceDeck.cards[6],this.referenceDeck.cards[9],this.referenceDeck.cards[1]];let e=new CustomEvent("renderInstalledComponents");document.dispatchEvent(e)};setupOpponent=()=>{this.opponent=new Opponent;let e=new CustomEvent("setupOpponent",{detail:{level:this.level,referenceDeck:this.referenceDeck}});document.dispatchEvent(e)};setupCrew=()=>{this.logMessage('Select Crew: Under "Crew," click on your Pilot, Gunner, or Engineer to add a +2 bonus to that crew member.'),sessionStorage.setItem("dm21IncreaseLevel","2"),sessionStorage.setItem("dm21GamePhase","crewSetup"),this.toggleCrewListeners()};advancePhase=e=>{"crewSetup"===sessionStorage.getItem("dm21GamePhase")&&(sessionStorage.setItem("dm21GamePhase","started"),this.startLevel())};toggleCrewListeners=()=>{crewElements.forEach((e=>{e.classList.toggle("clickable")})),crewElements[0].classList.contains("clickable")?(crewContainer.querySelector(".crew__pilot").addEventListener("click",this.increasePilot),crewContainer.querySelector(".crew__gunner").addEventListener("click",this.increaseGunner),crewContainer.querySelector(".crew__engineer").addEventListener("click",this.increaseEngineer)):(crewContainer.querySelector(".crew__pilot").removeEventListener("click",this.increasePilot),crewContainer.querySelector(".crew__gunner").removeEventListener("click",this.increaseGunner),crewContainer.querySelector(".crew__engineer").removeEventListener("click",this.increaseEngineer))};increasePilot=()=>{let e=new CustomEvent("increaseCrew",{detail:{crew:"pilot"}});document.dispatchEvent(e)};increaseGunner=()=>{let e=new CustomEvent("increaseCrew",{detail:{crew:"gunner"}});document.dispatchEvent(e)};increaseEngineer=()=>{let e=new CustomEvent("increaseCrew",{detail:{crew:"engineer"}});document.dispatchEvent(e)};logMessage(e){let t=new CustomEvent("message",{detail:{message:e}});document.dispatchEvent(t)}startLevel=()=>{this.expose=!1,this.hack,document.querySelector(".player-mat_opponent").classList.toggle("hidden"),this.newRound()};newRound=()=>{this.attackRun=!1,this.expose=!1,this.countermeasures=!1,this.playerAttacked=!1,this.opponentAttacked=!1,this.turnActions=[],this.restoreComponents=[],this.updateSpecialActionListeners(),this.player.renderInstalledComponents(),this.rollInitiative()};rollInitiative=()=>{this.rollD6()+this.rollD6()+this.player.bonus.pilot>=this.rollD6()+this.rollD6()+this.opponent.bonus.pilot?(this.logMessage("Player's turn"),this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners()):(this.logMessage("Opponent's turn"),this.opponentAttack())};opponentAttack=()=>{this.opponentAttacked=!0;let e=0,t=this.opponent.defense,s=0,i={},n=0;for(let e=this.player.components.installed.length-1;e>-1;e--)this.player.components.installed[e].disabled||(i=this.player.components.installed[e]);if(this.hack&&(s=this.player.bonus.engineer,this.hack=!1),this.expose&&(t-=.1*this.player.bonus.pilot),1===this.level){if(this.opponent.components[1].counter>1){for(let t=0;t<2;t++){this.opponent.components[1].counter--,this.rollD6()+this.rollD6()+this.player.bonus.pilot<10&&(e+=5)}this.opponent.renderInstalledComponents()}let t=e-s+this.opponent.bonus.gunner;if(t>1){this.resolveAttack(t)>this.player.defense?(this.logMessage("Enemy Attack Hit!"),this.player.components.installed.forEach((e=>{e.cost>i.cost&&!e.disabled&&(i=e)})),i.disabled=!0,this.player.components.installed.forEach((e=>{e.counter||e.disabled||!e.attack||n++})),0===n?(document.querySelector(".player-mat_opponent").classList.toggle("hidden"),document.querySelector(".player-mat_human").classList.toggle("hidden"),document.querySelector(".defeat").classList.toggle("hidden")):(this.player.renderInstalledComponents(),this.playerAttacked?this.newRound():(this.logMessage("Player's turn"),this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners(),this.updateSpecialActionListeners()))):(this.logMessage("Enemy Attack Missed!"),this.playerAttacked?this.newRound():(this.logMessage("Player's turn"),this.updateSpecialActionListeners(),this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners()))}else this.logMessage("Enemy Attack Missed!"),this.logMessage("Player's turn"),this.playerAttacked?this.newRound():this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners()}if(2===this.level){let e=5-s+this.opponent.bonus.gunner;if(e>1){this.resolveAttack(e)>this.player.defense?(this.logMessage("Enemy Attack Hit!"),this.player.components.installed.forEach((e=>{e.cost>i.cost&&!e.disabled&&(i=e)})),i.disabled=!0,this.player.components.installed.forEach((e=>{e.counter||e.disabled||!e.attack||n++})),0===n?(document.querySelector(".player-mat_opponent").classList.toggle("hidden"),document.querySelector(".player-mat_human").classList.toggle("hidden"),document.querySelector(".defeat").classList.toggle("hidden")):(this.player.renderInstalledComponents(),this.playerAttacked?this.newRound():(this.logMessage("Player's turn"),this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners(),this.updateSpecialActionListeners()))):(this.logMessage("Enemy Attack Missed!"),this.playerAttacked?this.newRound():(this.logMessage("Player's turn"),this.updateSpecialActionListeners(),this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners()))}else this.logMessage("Enemy Attack Missed!"),this.logMessage("Player's turn"),this.playerAttacked?this.newRound():this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners()}};togglePlayerComponentListeners=()=>{this.components=this.componentDisplay.querySelectorAll(".components__item"),this.components.forEach((e=>{e.classList.toggle("clickable"),e.classList.contains("clickable")?e.addEventListener("click",this.handlePlayerComponentClick):e.removeEventListener("click",this.handlePlayerComponentClick)}))};toggleOpponentComponentListeners=()=>{this.oppComponents=this.oppComponentDisplay.querySelectorAll(".components__item"),this.oppComponents.forEach((e=>{e.classList.toggle("clickable"),e.classList.contains("clickable")?e.addEventListener("click",this.handleOpponentComponentClick):e.removeEventListener("click",this.handleOpponentComponentClick)}))};updateSpecialActionListeners=()=>{if(this.attackRun)this.specialActions.forEach((e=>{e.classList.remove("clickable"),e.removeEventListener("click",this.handleSpecialActionClick)}));else if(this.expose)for(let e=0;e<this.specialActions.length;e++)e<2&&(this.specialActions[e].classList.remove("clickable"),this.specialActions[e].removeEventListener("click",this.handleSpecialActionClick));else if(this.hack)for(let e=0;e<this.specialActions.length;e++)0!==e&&2!==e||(this.specialActions[e].classList.remove("clickable"),this.specialActions[e].removeEventListener("click",this.handleSpecialActionClick));else this.specialActions.forEach((e=>{e.classList.contains("clickable")||(e.classList.add("clickable"),e.addEventListener("click",this.handleSpecialActionClick))}))};toggleTurnButtonListeners=()=>{this.completeTurn.classList.toggle("clickable"),this.completeTurn.classList.contains("clickable")?this.completeTurn.addEventListener("click",this.handleCompleteTurnClick):this.completeTurn.removeEventListener("click",this.handleCompleteTurnClick),this.undoTurn.classList.toggle("clickable"),this.undoTurn.classList.contains("clickable")?this.undoTurn.addEventListener("click",this.handleUndoTurnClick):this.undoTurn.removeEventListener("click",this.handleUndoTurnClick)};findComponentIndex=e=>{for(let t=0;t<this.player.components.installed.length;t++)if(this.player.components.installed[t].title===e)return t;return-1};findTurnIndex=e=>{for(let t=0;t<this.turnActions.length;t++)if(-1!=this.turnActions[t].log.indexOf(e))return t;return-1};handleSpecialActionClick=e=>{e.target.classList.contains("special-actions__button_attack-run")?(this.attackRun=!0,this.updateSpecialActionListeners(),this.logMessage("Select Weapon")):e.target.classList.contains("special-actions__button_expose")?(this.expose=!0,this.updateSpecialActionListeners(),this.completeAction()):(this.hack=!0,this.updateSpecialActionListeners(),this.completeAction())};handleUndoTurnClick=()=>{this.attackRun&&(this.componentDisplay.querySelector(".components__item").classList.contains("clickable")||this.togglePlayerComponentListeners()),this.turnActions=[],this.expose=!1,this.hack=!1,this.attackRun=!1,this.countermeasures=!1,this.restoreComponents.length>0&&(this.player.components.installed=this.restoreComponents,-1!=this.activeMissileIndex&&(this.player.components.installed[this.activeMissileIndex].counter=this.activeMissileQuantity)),this.restoreComponents=[],this.updateSpecialActionListeners(),this.completeAction()};handleOpponentComponentClick=e=>{let t=e.target.style.background.toString();for(let e=0;e<this.opponent.components.length;e++)-1!=t.indexOf(this.opponent.components[e].image)&&(this.opponent.components[e].disabled=!0);this.opponent.renderInstalledComponents(),this.toggleOpponentComponentListeners(),this.newRound()};handlePlayerComponentClick=e=>{e.target.classList.toggle("focus");let t=e.target.style.background.toString();if(e.target.classList.contains("focus")){for(let e=0;e<this.player.components.installed.length;e++)-1!=t.indexOf(this.player.components.installed[e].image)&&(this.selectedComponent=this.player.components.installed[e]);if(this.selectedComponent.disabled)this.logMessage("Component has been disabled!");else if("Missile Launcher"===this.selectedComponent.title)this.lightMissileIndex=-1,this.heavyMissileIndex=-1,-1!=this.findComponentIndex("Light Missiles")?this.lightMissileIndex=this.findComponentIndex("Light Missiles"):-1!=this.findComponentIndex("Heavy Missiles")&&(this.heavyMissileIndex=this.findComponentIndex("Heavy Missiles")),(this.heavyMissileIndex>-1||this.lightMissileIndex>-1)&&this.missileDialog.classList.toggle("hidden"),this.heavyMissileIndex>-1&&this.lightMissileIndex>-1?this.missileDialog.querySelector(".missile-dialog__type").classList.toggle("hidden"):-1!=this.lightMissileIndex?(this.activeMissileIndex=this.lightMissileIndex,this.selectMissileNumber()):-1!=this.heavyMissileIndex?(this.activeMissileIndex=this.heavyMissileIndex,this.selectMissileNumber()):this.logMessage("No missiles left!");else if("Auto Cannon"===this.selectedComponent.title)if(-1===this.findTurnIndex("Auto Cannon")){let e={log:"Fire Auto Cannon",type:"attack",missiles:0,value:1};this.turnActions.push(e),this.completeAction()}else this.logMessage(`${this.selectedComponent.title} already used.`);else"Countermeasures"===this.selectedComponent.title&&(this.attackRun?this.logMessage("Must select weapon for attack run."):(this.countermeasures=!0,this.backupComponents(),this.player.components.installed.splice(this.findComponentIndex("Countermeasures"),1),this.completeAction()))}e.target.classList.toggle("focus")};selectMissileType=e=>{console.log(e.target)};selectMissileNumber=()=>{this.backupComponents(),this.missileDialog.querySelector(".missile-dialog__number").classList.toggle("hidden"),this.activeMissileQuantity=this.player.components.installed[this.activeMissileIndex].counter,this.activeMissileIndex===this.lightMissileIndex?this.activeMissileQuantity>4?this.maxMissiles=4:this.maxMissiles=this.activeMissileQuantity:this.activeMissileQUantity>2?this.maxMissiles=2:this.maxMissiles=this.activeMissileQuantity;for(let e=0;e<this.maxMissiles;e++)this.missileNumbers[e].classList.toggle("hidden")};backupComponents=()=>{0===this.restoreComponents.length&&this.player.components.installed.forEach((e=>{this.restoreComponents.push(e)}))};queueMissiles=e=>{for(let e=0;e<this.maxMissiles;e++)this.missileNumbers[e].classList.toggle("hidden");this.missileDialog.querySelector(".missile-dialog__number").classList.toggle("hidden"),this.missileDialog.classList.toggle("hidden");let t={log:`Fire ${e.target.textContent} ${this.player.components.installed[this.activeMissileIndex].title}`,type:"attack",missiles:parseInt(e.target.textContent),value:this.player.components.installed[this.activeMissileIndex].attack};this.turnActions.push(t),this.player.components.installed[this.activeMissileIndex].counter=this.player.components.installed[this.activeMissileIndex].counter-e.target.textContent,0===this.player.components.installed[this.activeMissileIndex].counter&&this.player.components.installed.splice(this.activeMissileIndex,1),this.completeAction()};completeAction=()=>{let e="";if(this.countermeasures&&(e+="Deploy Countermeasures",(this.turnActions.length>0||this.expose||this.hack)&&(e+=" & ")),this.expose&&(e+="Expose",(this.turnActions.length>0||this.hack)&&(e+=" & ")),this.hack&&(e+="Hack",this.turnActions.length>0&&(e+=" & ")),this.attackRun&&(e+="Attack Run: ",this.togglePlayerComponentListeners()),this.turnActions.length>0)for(let t=0;t<this.turnActions.length;t++)e+=this.turnActions[t].log,this.turnActions.length>1&&t!=this.turnActions.length-1&&(e+=" & ");this.player.renderInstalledComponents(),this.completeTurn.classList.contains("clickable")||this.toggleTurnButtonListeners(),""===e&&(e="TURN RESET",this.toggleTurnButtonListeners()),this.logMessage(e),this.attackRun&&this.logMessage('Press "Complete Turn"')};handleCompleteTurnClick=()=>{this.playerAttacked=!0,this.toggleTurnButtonListeners();let e=0,t=0,s=0;this.expose&&t++,this.hack&&t++,this.turnActions.length>1&&(t+=this.turnActions.length-1),this.turnActions.forEach((t=>{if(t.missiles>0)for(let s=0;s<t.missiles;s++){this.rollD6()+this.rollD6()+this.opponent.bonus.pilot<10&&(e+=t.value)}else!t.missiles&&t.value&&(e+=t.value)})),this.attackRun&&e++;let i=e-t+this.player.bonus.gunner;i>0&&this.resolveAttack(i)>this.opponent.defense?(this.logMessage("Attack Hit!"),this.opponent.components.forEach((e=>{e.counter||e.disabled||s++})),1===s?(this.logMessage("Enemy Ship Destroyed!"),this.proceedToDock()):(this.logMessage("Select a component on the enemy ship to disable."),this.toggleOpponentComponentListeners())):(this.logMessage("Attack Missed!"),this.opponentAttacked?this.newRound():this.opponentAttack())};proceedToDock=()=>{document.querySelector(".player-mat_opponent").classList.toggle("hidden"),document.querySelector(".proceed-to-dock").classList.toggle("hidden")};rollD6=()=>Math.floor(6*Math.random())+1;resolveAttack=e=>{let t=[];for(let s=0;s<e;s++)t[s]=this.rollD6();t.sort();let s=t[t.length-1],i=t.indexOf(s);if(i<t.length-1){s+=.2*(t.length-1-i)}return s};saveGame(){localStorage.setItem("dm21Save",JSON.stringify({player:this.player,gameDeck:this.gameDeck}))}loadGame(){try{const e=JSON.parse(localStorage.getItem("dm21Save"));if(e&&e.gameDeck)return this.gameDeck=Deck().restore(e.gameDeck.cards),this.player=Player().restore(e.player.bonus,e.player.crewElements,e.player.components,e.player.repeat),!0}catch(e){console.error("no game state")}return!1}}
//# sourceMappingURL=game.js.map